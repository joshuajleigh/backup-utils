#!/usr/bin/env bash
#/ Usage: ghe-ssh-config
#/
#/ Returns a SSH configuration file.
#/
#/ Note: This script typically isn't called directly. It's invoked by the
#/ ghe-[backup|restore]-* commands.
set -e

export GIT_CONFIG_NOSYSTEM=1

if [ -z "$GIT_CONFIG" ]; then
   if [ -f "$GHE_SNAPSHOT_DIR/cluster.conf" ]; then
     export GIT_CONFIG="$GHE_SNAPSHOT_DIR/cluster.conf"
   else
     echo "ERROR: cluster.conf is required to generate the SSH configuration."
     exit 1
   fi
fi

hosts=$(git config --get-regexp cluster.*.hostname | cut -d ' ' -f2)

for hostname in $hosts; do
  if [ -n "$(git config cluster.$hostname.ipv6)" ]; then
    ip=$(git config "cluster.$hostname.ipv6")
  elif [ -n "$(git config cluster.$hostname.ipv4)" ]; then
    ip=$(git config "cluster.$hostname.ipv4")
  fi

  uuid=$(git config "cluster.$hostname.uuid" || true)

  echo "Host git-server-$uuid pages-server-$uuid storage-server-$uuid"
  if [ "$GHE_SSH_DIRECT" = "yes" ]; then
    echo "  HostName $ip"
  else
    echo "  ProxyCommand ghe-ssh $GHE_HOSTNAME -- nc.openbsd %h %p"
  fi
  echo "  StrictHostKeyChecking=no"
done
